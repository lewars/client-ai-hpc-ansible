---
version: "3"

vars:
  PROJECT: ai-hpc-ansible
  VENV_NAME: .venv
  ENV: lab
  PYTHON_VERSION: 3.9.12

tasks:
  info:
    desc: Show project information
    cmds:
      - |
          echo "Project: {{.PROJECT}}"
          echo "Version: 0.1.0"
          echo "Author: Alistair Y. Lewars"
          echo "Current Environment: {{.ENV}}"

  install-uv:
    desc: Install 'uv' if not present
    cmds:
      - command -v uv || pip install uv

  venv:
    desc: Create a Python virtual environment
    cmds:
      - |
        echo "Creating virtual environment {{.VENV_NAME}}"
        uv venv {{.VENV_NAME}}


  install-deps:
    desc: Install Python dependencies
    cmds:
      - |
        echo "Installing Python dependencies..."
        bash -c "source {{.VENV_NAME}}/bin/activate"
        uv pip install --upgrade pip
        uv pip install -r requirements.txt

  lint:
    desc: Lint Ansible code
    cmds:
      - ansible-lint

  lint:nvidia:
    desc: Lint only the NVIDIA role
    cmds:
      - ansible-lint roles/nvidia

  validate:
    desc: Validate Ansible playbooks
    cmds:
      - ansible-playbook --syntax-check playbook.yml

  test:role:destroy:
    desc: Destroy test instances for a specific role
    cmds:
      - cd roles/{{.ROLE}} && molecule destroy
    requires:
      vars: [ROLE]

  test:role:
    desc: Test a specific role with Molecule using TestInfra
    deps: [test:role:destroy]
    cmds:
      - cd roles/{{.ROLE}} && molecule test
    requires:
      vars: [ROLE]

  test:nvidia:destroy:
    desc: Destroy all NVIDIA role test instances
    cmds:
      - cd roles/nvidia && molecule destroy

  test:nvidia:
    desc: Test the NVIDIA role with Molecule
    deps: [test:nvidia:destroy]
    cmds:
      - cd roles/nvidia && molecule test

  test:nvidia:lint:
    desc: Run only the lint step for the NVIDIA role
    cmds:
      - cd roles/nvidia && molecule lint

  test:nvidia:verify:
    desc: Run only the verify step for the NVIDIA role
    deps: [test:nvidia:destroy]
    cmds:
      - cd roles/nvidia && molecule create
      - cd roles/nvidia && molecule prepare
      - cd roles/nvidia && molecule converge
      - cd roles/nvidia && molecule verify

  test:all:destroy:
    desc: Destroy all Molecule test instances for all roles
    cmds:
      - |
        for role in roles/*; do
          if [ -d "$role/molecule" ]; then
            echo "Cleaning up $role..."
            cd $role && molecule destroy && cd ../..
          fi
        done

  test:all:
    desc: Test all roles with Molecule
    deps: [test:all:destroy]
    cmds:
      - |
        for role in roles/*; do
          if [ -d "$role/molecule" ]; then
            cd $role && molecule test && cd ../..
          fi
        done

  deploy:
    desc: Deploy to the specified environment (lab, dev, prod)
    cmds:
      - |
        echo "Deploying to {{.ENV}} environment"
        ansible-playbook -i inventory/{{.ENV}} playbook.yml

  deploy-lab:
    desc: Deploy to lab environment
    vars:
      ENV: lab
    cmds:
      - task: deploy

  deploy-dev:
    desc: Deploy to dev environment
    vars:
      ENV: dev
    cmds:
      - task: deploy

  deploy-prod:
    desc: Deploy to prod environment
    vars:
      ENV: prod
    cmds:
      - task: deploy

  clean:
    desc: Remove virtual environment and cleanup working directory
    cmds:
      - |
        echo "Cleaning up..."
        rm -rf {{.VENV_NAME}}
        find . -type d -name "__pycache__" -exec rm -r {} +
        find roles/ -type d -name ".ansible-tmp" -exec rm -r {} +
        rm -rf .pytest_cache/
        rm -f dist/*
